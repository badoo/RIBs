buildscript {
    dependencies {
        classpath deps.build.intellijPlugin
    }
}

apply plugin: "kotlin"
apply plugin: "maven"
apply plugin: "org.jetbrains.intellij"
apply plugin: "templates-generator"

group "com.badoo.ribs"

repositories {
    mavenLocal()
}

templates {
    template {
        id = 'leaf_release_0.22'
        name = '[0.22] Leaf node'

        fromProject = project(':templates:release-0.22')
        sourcePackage = 'com.badoo.ribs.template.leaf'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'leaf_view_only_release_0.22'
        name = '[0.22] Leaf node (view only)'

        fromProject = project(':templates:release-0.22')
        sourcePackage = 'com.badoo.ribs.template.leaf_view_only'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_manual_di_release_0.22'
        name = '[0.22] Router node + Manual DI'

        fromProject = project(':templates:release-0.22')
        sourcePackage = 'com.badoo.ribs.template.node'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_release_0.22'
        name = '[0.22] Router node + Dagger'

        fromProject = project(':templates:release-0.22')
        sourcePackage = 'com.badoo.ribs.template.node_dagger'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_build_param_release_0.22'
        name = '[0.22] Router node + Dagger + BuildParam'

        fromProject = project(':templates:release-0.22')
        sourcePackage = 'com.badoo.ribs.template.node_dagger_build_param'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'leaf_release_0.21'
        name = '[0.21] Leaf node'

        fromProject = project(':templates:release-0.21')
        sourcePackage = 'com.badoo.ribs.template.leaf'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'leaf_view_only_release_0.21'
        name = '[0.21] Leaf node (view only)'

        fromProject = project(':templates:release-0.21')
        sourcePackage = 'com.badoo.ribs.template.leaf_view_only'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_manual_di_release_0.21'
        name = '[0.21] Router node + Manual DI'

        fromProject = project(':templates:release-0.21')
        sourcePackage = 'com.badoo.ribs.template.node'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_release_0.21'
        name = '[0.21] Router node + Dagger'

        fromProject = project(':templates:release-0.21')
        sourcePackage = 'com.badoo.ribs.template.node_dagger'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_build_param_release_0.21'
        name = '[0.21] Router node + Dagger + BuildParam'

        fromProject = project(':templates:release-0.21')
        sourcePackage = 'com.badoo.ribs.template.node_dagger_build_param'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'leaf_release_0.20'
        name = '[0.20] Leaf node'

        fromProject = project(':templates:release-0.20')
        sourcePackage = 'com.badoo.ribs.template.leaf'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'leaf_view_only_release_0.20'
        name = '[0.20] Leaf node (view only)'

        fromProject = project(':templates:release-0.20')
        sourcePackage = 'com.badoo.ribs.template.leaf_view_only'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_manual_di_release_0.20'
        name = '[0.20] Router node + Manual DI'

        fromProject = project(':templates:release-0.20')
        sourcePackage = 'com.badoo.ribs.template.node'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_release_0.20'
        name = '[0.20] Router node + Dagger'

        fromProject = project(':templates:release-0.20')
        sourcePackage = 'com.badoo.ribs.template.node_dagger'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_build_param_release_0.20'
        name = '[0.20] Router node + Dagger + BuildParam'

        fromProject = project(':templates:release-0.20')
        sourcePackage = 'com.badoo.ribs.template.node_dagger_build_param'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'leaf_release_0.19'
        name = '[0.19] Leaf node'

        fromProject = project(':templates:release-0.19')
        sourcePackage = 'com.badoo.ribs.template.leaf'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_manual_di_release_0.19'
        name = '[0.19] Router node + Manual DI'

        fromProject = project(':templates:release-0.19')
        sourcePackage = 'com.badoo.ribs.template.node'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_release_0.19'
        name = '[0.19] Router node + Dagger'

        fromProject = project(':templates:release-0.19')
        sourcePackage = 'com.badoo.ribs.template.node_dagger'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_build_param_release_0.19'
        name = '[0.19] Router node + Dagger + BuildParam'

        fromProject = project(':templates:release-0.19')
        sourcePackage = 'com.badoo.ribs.template.node_dagger_build_param'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'leaf_release_0.18'
        name = '[0.18] Leaf node'

        fromProject = project(':templates:release-0.18')
        sourcePackage = 'com.badoo.ribs.template.leaf'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_manual_di_release_0.18'
        name = '[0.18] Router node + Manual DI'

        fromProject = project(':templates:release-0.18')
        sourcePackage = 'com.badoo.ribs.template.node'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_release_0.18'
        name = '[0.18] Router node + Dagger'

        fromProject = project(':templates:release-0.18')
        sourcePackage = 'com.badoo.ribs.template.node_dagger'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_build_param_release_0.18'
        name = '[0.18] Router node + Dagger + BuildParam'

        fromProject = project(':templates:release-0.18')
        sourcePackage = 'com.badoo.ribs.template.node_dagger_build_param'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'leaf_release_0.15'
        name = '[0.15] Leaf node'

        fromProject = project(':templates:release-0.15')
        sourcePackage = 'com.badoo.ribs.template.leaf'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_manual_di_release_0.15'
        name = '[0.15] Router node + Manual DI'

        fromProject = project(':templates:release-0.15')
        sourcePackage = 'com.badoo.ribs.template.node'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_release_0.15'
        name = '[0.15] Router node + Dagger'

        fromProject = project(':templates:release-0.15')
        sourcePackage = 'com.badoo.ribs.template.node_dagger'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_build_param_release_0.15'
        name = '[0.15] Router node + Dagger + BuildParam'

        fromProject = project(':templates:release-0.15')
        sourcePackage = 'com.badoo.ribs.template.node_dagger_build_param'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'leaf_release_0.14'
        name = '[0.14] Leaf node'

        fromProject = project(':templates:release-0.14')
        sourcePackage = 'com.badoo.ribs.template.leaf'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_manual_di_release_0.14'
        name = '[0.14] Router node + Manual DI'

        fromProject = project(':templates:release-0.14')
        sourcePackage = 'com.badoo.ribs.template.node'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_release_0.14'
        name = '[0.14] Router node + Dagger'

        fromProject = project(':templates:release-0.14')
        sourcePackage = 'com.badoo.ribs.template.node_dagger'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_build_param_release_0.14'
        name = '[0.14] Router node + Dagger + BuildParam'

        fromProject = project(':templates:release-0.14')
        sourcePackage = 'com.badoo.ribs.template.node_dagger_build_param'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'leaf_release_0.13'
        name = '[0.13] Leaf node'

        fromProject = project(':templates:release-0.13')
        sourcePackage = 'com.badoo.ribs.template.leaf'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_manual_di_release_0.13'
        name = '[0.13] Router node + Manual DI'

        fromProject = project(':templates:release-0.13')
        sourcePackage = 'com.badoo.ribs.template.node'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_release_0.13'
        name = '[0.13] Router node + Dagger'

        fromProject = project(':templates:release-0.13')
        sourcePackage = 'com.badoo.ribs.template.node_dagger'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_build_param_release_0.13'
        name = '[0.13] Router node + Dagger + BuildParam'

        fromProject = project(':templates:release-0.13')
        sourcePackage = 'com.badoo.ribs.template.node_dagger_build_param'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }


    template {
        id = 'rib_with_view_release_0.8'
        name = '[0.8] RIB with view -- @Deprecated'

        fromProject = project(':templates:release-0.8')
        sourcePackage = 'com.badoo.ribs.template.rib_with_view'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'leaf_snapshot'
        name = '[SNAPSHOT] Leaf node'

        fromProject = project(':templates:snapshot')
        sourcePackage = 'com.badoo.ribs.template.leaf'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'leaf_view_only_snapshot'
        name = '[SNAPSHOT] Leaf node (view only)'

        fromProject = project(':templates:snapshot')
        sourcePackage = 'com.badoo.ribs.template.leaf_view_only'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_manual_di_snapshot'
        name = '[SNAPSHOT] Router node + Manual DI'

        fromProject = project(':templates:snapshot')
        sourcePackage = 'com.badoo.ribs.template.node'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_snapshot'
        name = '[SNAPSHOT] Router node + Dagger'

        fromProject = project(':templates:snapshot')
        sourcePackage = 'com.badoo.ribs.template.node_dagger'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_dagger_build_param_snapshot'
        name = '[SNAPSHOT] Router node + Dagger + BuildParam'

        fromProject = project(':templates:snapshot')
        sourcePackage = 'com.badoo.ribs.template.node_dagger_build_param'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }
}

dependencies {
    implementation deps.build.commonsLang
    implementation deps.android.annotations
    implementation deps.external.kotlinStdlib
    implementation deps.external.apacheCommons
    implementation deps.external.gson

    testImplementation deps.test.junit
    testImplementation deps.test.assertj
    testImplementation deps.test.mockitoKotlin
}

// Determines if the machine has Maven credentials.
def hasMavenCredentials() {
    return ext.mavenUser && ext.mavenPassword
}

// Determines if it is a release build.
static def isReleaseBuild() {
    return System.env.ENABLE_RELEASE_BUILD == "true"
}

ext.pluginXml = new XmlSlurper().parse(file("src/main/resources/META-INF/plugin.xml"))
version = pluginXml.version

intellij {
    plugins = ['android', deps.build.kotlinIdeaPlugin, 'java']
    version = deps.versions.intellij
    // localPath = '/Applications/Android Studio.app'
    updateSinceUntilBuild false
    sandboxDirectory "${project.gradle.gradleHomeDir}/caches/intellij"
    downloadSources true

    // Uncomment to test against Android Studio
    // alternativeIdePath = '/Applications/Android Studio.app'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

afterEvaluate {
    artifacts {
        archives sourcesJar
        archives project.tasks.getByName("buildPlugin")
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository url: "file://" + new File(System.getProperty("user.home"), ".m2/repository").absolutePath
            if (isReleaseBuild() && hasMavenCredentials()) {
                repository(url: "${config.build.artifactoryUrl}/${pluginsMavenRepositoryBucket}") {
                    authentication(userName: mavenUser, password: mavenPassword)
                }
            }
        }
    }
}
build.dependsOn uploadArchives

if (needToPublishPlugin()) {
    def pluginVersion = VERSION_NAME + "-" + (System.currentTimeMillis() / 1000)
    println("Publishing Intellij plugin $pluginVersion to JetBrains repository")

    publishPlugin {
        token System.getenv("IDEA_PLUGIN_PUBLICATION_TOKEN")
    }

    patchPluginXml {
        version pluginVersion
    }

    build.dependsOn publishPlugin
} else {
    println("Publishing Intellij plugin to JetBrains repository will be skipped")
}

static boolean needToPublishPlugin() {
    def parentCommitsNumber = executeBash("git show -s --pretty=%p HEAD | wc -w").trim().toInteger()
    def isMergeCommit = parentCommitsNumber > 0
    def isMainBranch = System.getenv("TRAVIS_BRANCH") == "master"
    def isNotPullRequest = System.getenv("TRAVIS_PULL_REQUEST") == "false"
    def isContainsTemplateChanges = containsTemplateChanges()
    def isCi = System.getenv("CI") == "true"
    println("Checking IDEA plugin publishing conditions: " +
        "isMergeCommit = $isMergeCommit, " +
        "isMainBranch = $isMainBranch, " +
        "isContainsTemplateChanges = $isContainsTemplateChanges, " +
        "isNotPullRequest = $isNotPullRequest, " +
        "isCi = $isCi")
    return isMergeCommit && isMainBranch && isNotPullRequest && isContainsTemplateChanges && isCi
}

static boolean containsTemplateChanges() {
    def lastCommitChangedFiles = executeBash("git diff --name-only HEAD~1 HEAD").split("\n")
    def changedTemplateFilesCount = lastCommitChangedFiles.count {
        it.startsWith("android/templates/src") || it.startsWith("android/tooling/rib-intellij-plugin")
    }
    println("Changed files:")
    println(lastCommitChangedFiles)
    return changedTemplateFilesCount > 0
}

static String executeBash(String command) {
    def proc = ['bash', '-c', command].execute()
    proc.waitFor()
    return proc.text
}
