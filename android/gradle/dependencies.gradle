/*
 * Copyright (C) 2017. Uber Technologies
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def versions = [
    archLifecycleCommon: '1.1.1',
    autodispose: '0.2.0', // TODO: migrate to the new autodispose version with androidx support
    autoValue: '1.6.3',
    constraintLayout: '1.1.3',
    dagger: '2.22.1',
    intellij: '2018.3.3',
    intellij_kotlin: '1.3.31-release-IJ2018.3-1',
    kotlin: '1.3.41',
    mviCore: '1.2.3',
    rave: '2.2.0',
    robolectric: '4.2',
    support: '28.0.0', // TODO: migrate to androidx
    supportTest: '1.0.2'
]

def apt = [
    androidApi: "com.google.android:android:4.1.1.4",
    autoCommon: "com.google.auto:auto-common:0.10",
    autoService: "com.google.auto.service:auto-service:1.0-rc4",
    daggerCompiler: "com.google.dagger:dagger-compiler:${versions.dagger}",
    javapoet: "com.squareup:javapoet:1.11.1",
    javax: "javax.annotation:jsr250-api:1.0",
    javaxInject: "javax.inject:javax.inject:1",
    autoValue: "com.google.auto.value:auto-value:${versions.autoValue}",
    autoValueAnnotations: "com.google.auto.value:auto-value-annotations:${versions.autoValue}",
    raveCompiler: "com.uber:rave-compiler:${versions.rave}",
]

def build = [
    compileSdkVersion: 28,
    gradlePluginsUrl : "https://plugins.gradle.org/m2/",
    ci: 'true' == System.getenv('CI'),
    minSdkVersion: 16,
    targetSdkVersion: 28,
    guava: "com.google.guava:guava:20.0",
    commonsLang: "commons-lang:commons-lang:2.6",
    intellijPlugin: "org.jetbrains.intellij:org.jetbrains.intellij.gradle.plugin:0.4.2",
    kotlinIdeaPlugin: "org.jetbrains.kotlin:${versions.intellij_kotlin}",
    gradlePlugins: [
        android: 'com.android.tools.build:gradle:3.4.0',
        kotlin: "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}",
        gradleKotlinDsl: 'org.gradle.kotlin:plugins:1.2.2',
        mavenPublish: 'com.vanniktech:gradle-maven-publish-plugin:0.8.0',
        detekt: 'io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.0.0-RC14',
    ]
]

def support = [
    annotations: "com.android.support:support-annotations:${versions.support}",
    appcompat: "com.android.support:appcompat-v7:${versions.support}",
    appCompat: "com.android.support:appcompat-v7:${versions.support}",
    archLifecycleCommon: "android.arch.lifecycle:common-java8:${versions.archLifecycleCommon}",
    constraintLayout: "com.android.support.constraint:constraint-layout:${versions.constraintLayout}",
    design: "com.android.support:design:${versions.support}",
    percent: "com.android.support:percent:${versions.support}",
    runner: "com.android.support.test:runner:${versions.supportTest}",
    rules: "com.android.support.test:rules:${versions.supportTest}"
]

def test = [
    junit: "junit:junit:4.12",
    mockito: "org.mockito:mockito-core:2.24.0",
    mockitoKotlin: "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0",
    assertj: "org.assertj:assertj-core:3.11.1",
    compileTesting: "com.google.testing.compile:compile-testing:0.11",
]

def androidTest = [
    espresso: "com.android.support.test.espresso:espresso-core:3.0.2",
    espressoIntents: "com.android.support.test.espresso:espresso-intents:3.0.2",
    runner: "com.android.support.test:runner:1.0.2",
    rules: "com.android.support.test:rules:1.0.2"
]

def external = [
    kotlinStdlib: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}",
    dagger: "com.google.dagger:dagger:${versions.dagger}",
    mviCore: "com.github.badoo.mvicore:mvicore:${versions.mviCore}",
    mviCoreAndroid: "com.github.badoo.mvicore:mvicore-android:${versions.mviCore}",
    mviCoreDiff: "com.github.badoo.mvicore:mvicore-diff:${versions.mviCore}",
    rxjava2: "io.reactivex.rxjava2:rxjava:2.2.6",
    rxrelay2: "com.jakewharton.rxrelay2:rxrelay:2.1.0",
    rxandroid2: "io.reactivex.rxjava2:rxandroid:2.1.1",
    reactiveStreams: "org.reactivestreams:reactive-streams:1.0.0",
    roboelectricBase: "org.robolectric:robolectric:${versions.robolectric}",
    rxbinding: 'com.jakewharton.rxbinding2:rxbinding:2.2.0',
    leakcanaryDebug: 'com.squareup.leakcanary:leakcanary-android:1.6.3',
    apacheCommons: 'org.apache.commons:commons-lang3:3.0',
    gson: 'com.google.code.gson:gson:2.8.5',
]

def uber = [
    autodispose: "com.uber.autodispose:autodispose:${versions.autodispose}",
    autodisposeAndroid : "com.uber.autodispose:autodispose-android:${versions.autodispose}@aar",
    rave: "com.uber:rave:${versions.rave}",
]

ext.deps = [
    "apt": apt,
    "build": build,
    "external": external,
    "support": support,
    "test": test,
    "androidTest": androidTest,
    "versions": versions,
    "uber": uber,
]
